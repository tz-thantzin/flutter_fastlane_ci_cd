# default_platform(:ios)
#
# platform :ios do
#   desc "Distribute to Firebase (dev)"
#   lane :dev do
#     build_ios_app(
#       workspace: "Runner.xcworkspace",
#       scheme: "dev",
#       export_method: "development",
#       export_options: {
#         provisioningProfiles: {
#           "com.example.flutterfastlanecicd.dev" => "match Development com.example.flutterfastlanecicd.dev"
#         }
#       },
#       xcargs: "-allowProvisioningUpdates -flavor dev -t lib/main_dev.dart"
#     )
#     upload_to_firebase(flavor: "dev")
#   end
#
#   desc "Distribute to Firebase (staging)"
#   lane :staging do
#     build_ios_app(
#       workspace: "Runner.xcworkspace",
#       scheme: "staging",
#       export_method: "ad-hoc",
#       export_options: {
#         provisioningProfiles: {
#           "com.example.flutterfastlanecicd.staging" => "match Development com.example.flutterfastlanecicd.staging"
#         }
#       },
#       xcargs: "-allowProvisioningUpdates -flavor staging -t lib/main_staging.dart"
#     )
#     upload_to_firebase(flavor: "staging")
#   end
#
#   desc "Distribute to Firebase (prod)"
#   lane :prod do
#     build_ios_app(
#       workspace: "Runner.xcworkspace",
#       scheme: "prod",
#       export_method: "app-store",
#       xcargs: "-allowProvisioningUpdates -flavor prod -t lib/main_prod.dart"
#     )
#     upload_to_firebase(flavor: "prod")
#   end
#
#   private_lane :upload_to_firebase do |options|
#     flavor = options[:flavor]
#     firebase_app_id = case flavor
#       when "dev" then "1:802005387528:ios:9ae5be5e4f64c95c0d84bd"
#       when "staging" then "1:802005387528:ios:902cd58ca29b04dc0d84bd"
#       when "prod" then "1:802005387528:ios:8aef32949732f9310d84bd"
#     end
#
#     service_credentials_file = File.expand_path("../../../firebase_service_account.json", __FILE__)
#
#     firebase_app_distribution(
#       app: firebase_app_id,
#       release_notes: "iOS #{flavor} build uploaded",
#       testers: "dev.thantzin@gmail.com",
#       firebase_cli_token: ENV["FIREBASE_TOKEN"],
#       service_credentials_file: service_credentials_file
#     )
#   end
# end
